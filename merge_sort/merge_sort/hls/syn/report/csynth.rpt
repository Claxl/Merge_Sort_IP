

================================================================
== Synthesis Summary Report of 'merge_sort'
================================================================
+ General Information: 
    * Date:           Tue May 28 19:23:03 2024
    * Version:        2023.2 (Build 4023990 on Oct 11 2023)
    * Project:        merge_sort
    * Solution:       hls (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------------------------------------+------+------+---------+-----------+----------+---------+------+----------+--------+----+-------------+-------------+-----+
    |                      Modules                     | Issue|      | Latency |  Latency  | Iteration|         | Trip |          |        |    |             |             |     |
    |                      & Loops                     | Type | Slack| (cycles)|    (ns)   |  Latency | Interval| Count| Pipelined|  BRAM  | DSP|      FF     |     LUT     | URAM|
    +--------------------------------------------------+------+------+---------+-----------+----------+---------+------+----------+--------+----+-------------+-------------+-----+
    |+ merge_sort*                                     |     -|  0.00|        -|          -|         -|        -|     -|  dataflow|  5 (1%)|   -|  19397 (18%)|  27421 (51%)|    -|
    | + entry_proc                                     |     -|  3.67|        0|      0.000|         -|        0|     -|        no|       -|   -|      3 (~0%)|     29 (~0%)|    -|
    | + read_input                                     |     -|  0.00|     1035|  1.035e+04|         -|     1035|     -|        no|       -|   -|    171 (~0%)|    144 (~0%)|    -|
    |  o read                                          |     -|  7.30|     1033|  1.033e+04|        11|        1|  1024|       yes|       -|   -|            -|            -|    -|
    | + merge_sort_iterative                           |     -|  0.37|        -|          -|         -|        -|     -|        no|  3 (1%)|   -|  17714 (16%)|  25699 (48%)|    -|
    |  + merge_sort_iterative_Pipeline_buffer          |     -|  2.08|     1026|  1.026e+04|         -|     1026|     -|        no|       -|   -|     24 (~0%)|   9291 (17%)|    -|
    |   o buffer                                       |     -|  7.30|     1024|  1.024e+04|         2|        1|  1024|       yes|       -|   -|            -|            -|    -|
    |  + merge_sort_iterative_Pipeline_output          |     -|  0.37|     1026|  1.026e+04|         -|     1026|     -|        no|       -|   -|     22 (~0%)|    2766 (5%)|    -|
    |   o output                                       |     -|  7.30|     1024|  1.024e+04|         2|        1|  1024|       yes|       -|   -|            -|            -|    -|
    |  o iteration                                     |     -|  7.30|        -|          -|         -|        -|     -|        no|       -|   -|            -|            -|    -|
    |   o VITIS_LOOP_79_1                              |     -|  7.30|        -|          -|         -|        -|     -|        no|       -|   -|            -|            -|    -|
    |    + merge_sort_iterative_Pipeline_left_right    |     -|  1.95|        -|          -|         -|        -|     -|        no|       -|   -|    171 (~0%)|    2927 (5%)|    -|
    |     o left_right                                 |     -|  7.30|        -|          -|         2|        1|     -|       yes|       -|   -|            -|            -|    -|
    |    + merge_sort_iterative_Pipeline_merge         |     -|  1.23|        -|          -|         -|        -|     -|        no|       -|   -|     46 (~0%)|    227 (~0%)|    -|
    |     o merge                                      |     -|  7.30|        -|          -|         3|        1|     -|       yes|       -|   -|            -|            -|    -|
    |    + merge_sort_iterative_Pipeline_buffer_write  |     -|  2.19|        -|          -|         -|        -|     -|        no|       -|   -|    110 (~0%)|    191 (~0%)|    -|
    |     o buffer_write                               |     -|  7.30|        -|          -|         2|        1|     -|       yes|       -|   -|            -|            -|    -|
    | + write_output                                   |     -|  0.00|     1033|  1.033e+04|         -|     1033|     -|        no|       -|   -|    168 (~0%)|    165 (~0%)|    -|
    |  o write                                         |     -|  7.30|     1031|  1.031e+04|         9|        1|  1024|       yes|       -|   -|            -|            -|    -|
    +--------------------------------------------------+------+------+---------+-----------+----------+---------+------+----------+--------+----+-------------+-------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem | 8 -> 8     | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register   | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL       | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER       | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER     | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR     | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | input_r_1  | 0x10   | 32    | W      | Data signal of input_r           |                                                                      |
| s_axi_control | input_r_2  | 0x14   | 32    | W      | Data signal of input_r           |                                                                      |
| s_axi_control | output_r_1 | 0x1c   | 32    | W      | Data signal of output_r          |                                                                      |
| s_axi_control | output_r_2 | 0x20   | 32    | W      | Data signal of output_r          |                                                                      |
+---------------+------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+-------------+
| Argument | Direction | Datatype    |
+----------+-----------+-------------+
| input    | inout     | ap_uint<8>* |
| output   | inout     | ap_uint<8>* |
+----------+-----------+-------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+
| Argument | HW Interface  | HW Type   | HW Usage |
+----------+---------------+-----------+----------+
| input    | m_axi_gmem    | interface |          |
| input    | s_axi_control | interface | offset   |
| output   | m_axi_gmem    | interface |          |
| output   | s_axi_control | interface | offset   |
+----------+---------------+-----------+----------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+--------+-------+-------+----------------------------------------------------------------+
| HW Interface | Direction | Length | Width | Loop  | Loop Location                                                  |
+--------------+-----------+--------+-------+-------+----------------------------------------------------------------+
| m_axi_gmem   | read      | 1024   | 8     | read  | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:41:5 |
| m_axi_gmem   | write     | 1024   | 8     | write | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:49:5 |
+--------------+-----------+--------+-------+-------+----------------------------------------------------------------+

* All M_AXI Variable Accesses
+--------------+----------+-----------------------------------------------------------------+-----------+--------------+--------+-------+----------------------------------------------------------------+------------+------------------------------------------------------------------------------------------------------+
| HW Interface | Variable | Access Location                                                 | Direction | Burst Status | Length | Loop  | Loop Location                                                  | Resolution | Problem                                                                                              |
+--------------+----------+-----------------------------------------------------------------+-----------+--------------+--------+-------+----------------------------------------------------------------+------------+------------------------------------------------------------------------------------------------------+
| m_axi_gmem   | input    | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:43:15 | read      | Widen Fail   |        | read  | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:41:5 | 214-353    | Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem   | input    | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:43:15 | read      | Inferred     | 1024   | read  | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:41:5 |            |                                                                                                      |
| m_axi_gmem   | output   | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:51:12 | write     | Widen Fail   |        | write | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:49:5 | 214-353    | Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem   | output   | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:51:12 | write     | Inferred     | 1024   | write | /home/claxl/Documents/NECSTCamp/merge_sort/merge_sort.cpp:49:5 |            |                                                                                                      |
+--------------+----------+-----------------------------------------------------------------+-----------+--------------+--------+-------+----------------------------------------------------------------+------------+------------------------------------------------------------------------------------------------------+

    * Resolution URL: docs.xilinx.com/access/sources/dita/topic?Doc_Version=2023.2%20English&url=ug1448-hls-guidance&resourceid=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+------------------------------------------------+-----+--------+-----------+-----+--------+---------+
| Name                                           | DSP | Pragma | Variable  | Op  | Impl   | Latency |
+------------------------------------------------+-----+--------+-----------+-----+--------+---------+
| + merge_sort                                   | 0   |        |           |     |        |         |
|  + read_input                                  | 0   |        |           |     |        |         |
|    add_ln41_fu_111_p2                          |     |        | add_ln41  | add | fabric | 0       |
|  + merge_sort_iterative                        | 0   |        |           |     |        |         |
|    add_ln80_fu_19645_p2                        |     |        | add_ln80  | add | fabric | 0       |
|    i_fu_19650_p2                               |     |        | i         | add | fabric | 0       |
|    add_ln79_fu_19739_p2                        |     |        | add_ln79  | add | fabric | 0       |
|   + merge_sort_iterative_Pipeline_buffer       | 0   |        |           |     |        |         |
|     add_ln71_fu_10296_p2                       |     |        | add_ln71  | add | fabric | 0       |
|   + merge_sort_iterative_Pipeline_left_right   | 0   |        |           |     |        |         |
|     add_ln83_fu_13428_p2                       |     |        | add_ln83  | add | fabric | 0       |
|   + merge_sort_iterative_Pipeline_buffer_write | 0   |        |           |     |        |         |
|     add_ln93_fu_4169_p2                        |     |        | add_ln93  | add | fabric | 0       |
|   + merge_sort_iterative_Pipeline_output       | 0   |        |           |     |        |         |
|     add_ln101_fu_10303_p2                      |     |        | add_ln101 | add | fabric | 0       |
|  + write_output                                | 0   |        |           |     |        |         |
|    add_ln49_fu_132_p2                          |     |        | add_ln49  | add | fabric | 0       |
+------------------------------------------------+-----+--------+-----------+-----+--------+---------+


================================================================
== Storage Report
================================================================
+-------------------------+--------------+-------------+------+------+--------+---------------+--------+---------+------------------+
| Name                    | Usage        | Type        | BRAM | URAM | Pragma | Variable      | Impl   | Latency | Bitwidth, Depth, |
|                         |              |             |      |      |        |               |        |         | Banks            |
+-------------------------+--------------+-------------+------+------+--------+---------------+--------+---------+------------------+
| + merge_sort            |              |             | 5    | 0    |        |               |        |         |                  |
|   control_s_axi_U       | interface    | s_axilite   |      |      |        |               |        |         |                  |
|   gmem_m_axi_U          | interface    | m_axi       | 2    |      |        |               |        |         |                  |
|   output_r_c_U          | fifo channel | scalar prop |      |      |        | output_r_c    | srl    | 0       | 64, 4, 1         |
|   input_stream_U        | fifo channel | stream      |      |      |        | input_stream  | srl    | 0       | 8, 2, 1          |
|   output_stream_U       | fifo channel | stream      |      |      |        | output_stream | srl    | 0       | 8, 2, 1          |
|  + merge_sort_iterative |              |             | 3    | 0    |        |               |        |         |                  |
|    left_stream_fifo_U   | fifo array   |             | 1    |      |        | left_stream   | memory | 0       | 8, 1024, 1       |
|    right_stream_fifo_U  | fifo array   |             | 1    |      |        | right_stream  | memory | 0       | 8, 1024, 1       |
|    temp_stream_fifo_U   | fifo array   |             | 1    |      |        | temp_stream   | memory | 0       | 8, 1024, 1       |
+-------------------------+--------------+-------------+------+------+--------+---------------+--------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------------+------------------------------------------------------------+---------------------------------------------------------+
| Type            | Options                                                    | Location                                                |
+-----------------+------------------------------------------------------------+---------------------------------------------------------+
| pipeline        | II=1                                                       | merge_sort.cpp:9 in merge_sort_primitive                |
| pipeline        | II=1                                                       | merge_sort.cpp:42 in read_input                         |
| pipeline        | II=1                                                       | merge_sort.cpp:50 in write_output                       |
| stream          | variable=left_stream depth=1024                            | merge_sort.cpp:60 in merge_sort_iterative, left_stream  |
| stream          | variable=right_stream depth=1024                           | merge_sort.cpp:61 in merge_sort_iterative, right_stream |
| stream          | variable=temp_stream depth=1024                            | merge_sort.cpp:62 in merge_sort_iterative, temp_stream  |
| array_partition | variable=buffer complete dim=1                             | merge_sort.cpp:67 in merge_sort_iterative, buffer       |
| pipeline        | II=1                                                       | merge_sort.cpp:72 in merge_sort_iterative               |
| pipeline        | II=1                                                       | merge_sort.cpp:84 in merge_sort_iterative               |
| pipeline        | II=1                                                       | merge_sort.cpp:94 in merge_sort_iterative               |
| pipeline        | II=1                                                       | merge_sort.cpp:102 in merge_sort_iterative              |
| interface       | mode=s_axilite port=return bundle=control                  | merge_sort.cpp:108 in merge_sort, return                |
| interface       | mode=m_axi port=input bundle=gmem depth=1024 offset=slave  | merge_sort.cpp:110 in merge_sort, input                 |
| interface       | mode=m_axi port=output bundle=gmem depth=1024 offset=slave | merge_sort.cpp:111 in merge_sort, output                |
| interface       | mode=s_axilite port=input bundle=control                   | merge_sort.cpp:113 in merge_sort, input                 |
| interface       | mode=s_axilite port=output bundle=control                  | merge_sort.cpp:114 in merge_sort, output                |
| dataflow        |                                                            | merge_sort.cpp:115 in merge_sort                        |
| stream          | variable=input_stream depth=2                              | merge_sort.cpp:120 in merge_sort, input_stream          |
| stream          | variable=output_stream depth=2                             | merge_sort.cpp:121 in merge_sort, output_stream         |
+-----------------+------------------------------------------------------------+---------------------------------------------------------+


