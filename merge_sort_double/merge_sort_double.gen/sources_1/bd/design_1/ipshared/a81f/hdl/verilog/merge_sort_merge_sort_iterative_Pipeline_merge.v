// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module merge_sort_merge_sort_iterative_Pipeline_merge (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        left_stream_dout,
        left_stream_empty_n,
        left_stream_read,
        right_stream_dout,
        right_stream_empty_n,
        right_stream_read,
        temp_stream_din,
        temp_stream_full_n,
        temp_stream_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] left_stream_dout;
input   left_stream_empty_n;
output   left_stream_read;
input  [7:0] right_stream_dout;
input   right_stream_empty_n;
output   right_stream_read;
output  [7:0] temp_stream_din;
input   temp_stream_full_n;
output   temp_stream_write;

reg ap_idle;
reg left_stream_read;
reg right_stream_read;
reg[7:0] temp_stream_din;
reg temp_stream_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg   [0:0] ap_phi_mux_left_empty_phi_fu_80_p4;
wire   [0:0] tmp_9_nbreadreq_fu_42_p3;
reg    ap_predicate_op19_read_state1;
reg   [0:0] ap_phi_mux_right_empty_phi_fu_91_p4;
wire   [0:0] tmp_s_nbreadreq_fu_56_p3;
reg    ap_predicate_op26_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] or_ln19_reg_217;
reg   [0:0] or_ln19_reg_217_pp0_iter1_reg;
reg   [0:0] icmp_ln20_reg_231;
reg    ap_predicate_op45_write_state3;
reg    ap_predicate_op46_write_state3;
reg   [0:0] left_empty_1_reg_99;
reg   [0:0] left_empty_1_reg_99_pp0_iter1_reg;
reg   [0:0] right_empty_1_reg_114;
reg   [0:0] right_empty_1_reg_114_pp0_iter1_reg;
reg    ap_predicate_op48_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_left_empty_1_phi_fu_102_p6;
reg   [0:0] ap_phi_mux_right_empty_1_phi_fu_117_p6;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    temp_stream_blk_n;
wire    ap_block_pp0_stage0;
reg    left_stream_blk_n;
reg    right_stream_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln19_fu_179_p2;
reg   [7:0] left_val_2_reg_221;
reg   [7:0] right_val_2_reg_226;
wire   [0:0] icmp_ln20_fu_191_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_left_empty_2_phi_fu_134_p8;
reg   [0:0] ap_phi_mux_right_empty_2_phi_fu_154_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_left_empty_1_reg_99;
wire   [0:0] ap_phi_reg_pp0_iter0_right_empty_1_reg_114;
reg   [0:0] ap_phi_reg_pp0_iter1_left_empty_2_reg_129;
wire   [0:0] ap_phi_reg_pp0_iter0_left_empty_2_reg_129;
reg   [0:0] ap_phi_reg_pp0_iter1_right_empty_2_reg_149;
wire   [0:0] ap_phi_reg_pp0_iter0_right_empty_2_reg_149;
reg   [7:0] left_val_fu_34;
reg   [7:0] right_val_fu_38;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_300;
reg    ap_condition_192;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 left_val_fu_34 = 8'd0;
#0 right_val_fu_38 = 8'd0;
#0 ap_done_reg = 1'b0;
end

merge_sort_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_right_empty_1_phi_fu_117_p6 == 1'd0) & (ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_left_empty_2_reg_129 <= 1'd1;
    end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_left_empty_2_reg_129 <= ap_phi_reg_pp0_iter0_left_empty_2_reg_129;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_192)) begin
        if ((ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_right_empty_2_reg_149 <= ap_phi_mux_right_empty_1_phi_fu_117_p6;
        end else if (((ap_phi_mux_right_empty_1_phi_fu_117_p6 == 1'd0) & (ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_right_empty_2_reg_149 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_right_empty_2_reg_149 <= ap_phi_reg_pp0_iter0_right_empty_2_reg_149;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_nbreadreq_fu_42_p3 == 1'd0) & (ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        left_empty_1_reg_99 <= 1'd1;
    end else if ((((tmp_9_nbreadreq_fu_42_p3 == 1'd1) & (ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        left_empty_1_reg_99 <= 1'd0;
    end else if ((~((ap_phi_mux_right_empty_1_phi_fu_117_p6 == 1'd1) & (ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd1)) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        left_empty_1_reg_99 <= ap_phi_reg_pp0_iter0_left_empty_1_reg_99;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_nbreadreq_fu_56_p3 == 1'd0) & (ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_empty_1_reg_114 <= 1'd1;
    end else if ((((tmp_s_nbreadreq_fu_56_p3 == 1'd1) & (ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        right_empty_1_reg_114 <= 1'd0;
    end else if ((~((ap_phi_mux_right_empty_1_phi_fu_117_p6 == 1'd1) & (ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd1)) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_empty_1_reg_114 <= ap_phi_reg_pp0_iter0_right_empty_1_reg_114;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln20_reg_231 <= icmp_ln20_fu_191_p2;
        left_empty_1_reg_99_pp0_iter1_reg <= left_empty_1_reg_99;
        left_val_2_reg_221 <= left_val_fu_34;
        or_ln19_reg_217 <= or_ln19_fu_179_p2;
        or_ln19_reg_217_pp0_iter1_reg <= or_ln19_reg_217;
        right_empty_1_reg_114_pp0_iter1_reg <= right_empty_1_reg_114;
        right_val_2_reg_226 <= right_val_fu_38;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_nbreadreq_fu_42_p3 == 1'd1) & (ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        left_val_fu_34 <= left_stream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_nbreadreq_fu_56_p3 == 1'd1) & (ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_val_fu_38 <= right_stream_dout;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_right_empty_1_phi_fu_117_p6 == 1'd1) & (ap_phi_mux_left_empty_1_phi_fu_102_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((right_empty_1_reg_114 == 1'd1) & (left_empty_1_reg_99 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_nbreadreq_fu_42_p3 == 1'd0) & (ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd1))) begin
        ap_phi_mux_left_empty_1_phi_fu_102_p6 = 1'd1;
    end else if (((ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd0) | ((tmp_9_nbreadreq_fu_42_p3 == 1'd1) & (ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd1)))) begin
        ap_phi_mux_left_empty_1_phi_fu_102_p6 = 1'd0;
    end else begin
        ap_phi_mux_left_empty_1_phi_fu_102_p6 = ap_phi_reg_pp0_iter0_left_empty_1_reg_99;
    end
end

always @ (*) begin
    if ((or_ln19_reg_217 == 1'd0)) begin
        if ((icmp_ln20_fu_191_p2 == 1'd1)) begin
            ap_phi_mux_left_empty_2_phi_fu_134_p8 = 1'd0;
        end else if ((icmp_ln20_fu_191_p2 == 1'd0)) begin
            ap_phi_mux_left_empty_2_phi_fu_134_p8 = 1'd1;
        end else begin
            ap_phi_mux_left_empty_2_phi_fu_134_p8 = ap_phi_reg_pp0_iter1_left_empty_2_reg_129;
        end
    end else begin
        ap_phi_mux_left_empty_2_phi_fu_134_p8 = ap_phi_reg_pp0_iter1_left_empty_2_reg_129;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_300)) begin
            ap_phi_mux_left_empty_phi_fu_80_p4 = ap_phi_mux_left_empty_2_phi_fu_134_p8;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_left_empty_phi_fu_80_p4 = 1'd1;
        end else begin
            ap_phi_mux_left_empty_phi_fu_80_p4 = ap_phi_mux_left_empty_2_phi_fu_134_p8;
        end
    end else begin
        ap_phi_mux_left_empty_phi_fu_80_p4 = ap_phi_mux_left_empty_2_phi_fu_134_p8;
    end
end

always @ (*) begin
    if (((tmp_s_nbreadreq_fu_56_p3 == 1'd0) & (ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd1))) begin
        ap_phi_mux_right_empty_1_phi_fu_117_p6 = 1'd1;
    end else if (((ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd0) | ((tmp_s_nbreadreq_fu_56_p3 == 1'd1) & (ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd1)))) begin
        ap_phi_mux_right_empty_1_phi_fu_117_p6 = 1'd0;
    end else begin
        ap_phi_mux_right_empty_1_phi_fu_117_p6 = ap_phi_reg_pp0_iter0_right_empty_1_reg_114;
    end
end

always @ (*) begin
    if ((or_ln19_reg_217 == 1'd0)) begin
        if ((icmp_ln20_fu_191_p2 == 1'd1)) begin
            ap_phi_mux_right_empty_2_phi_fu_154_p8 = 1'd1;
        end else if ((icmp_ln20_fu_191_p2 == 1'd0)) begin
            ap_phi_mux_right_empty_2_phi_fu_154_p8 = 1'd0;
        end else begin
            ap_phi_mux_right_empty_2_phi_fu_154_p8 = ap_phi_reg_pp0_iter1_right_empty_2_reg_149;
        end
    end else begin
        ap_phi_mux_right_empty_2_phi_fu_154_p8 = ap_phi_reg_pp0_iter1_right_empty_2_reg_149;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_300)) begin
            ap_phi_mux_right_empty_phi_fu_91_p4 = ap_phi_mux_right_empty_2_phi_fu_154_p8;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_right_empty_phi_fu_91_p4 = 1'd1;
        end else begin
            ap_phi_mux_right_empty_phi_fu_91_p4 = ap_phi_mux_right_empty_2_phi_fu_154_p8;
        end
    end else begin
        ap_phi_mux_right_empty_phi_fu_91_p4 = ap_phi_mux_right_empty_2_phi_fu_154_p8;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op19_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        left_stream_blk_n = left_stream_empty_n;
    end else begin
        left_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op19_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        left_stream_read = 1'b1;
    end else begin
        left_stream_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op26_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        right_stream_blk_n = right_stream_empty_n;
    end else begin
        right_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op26_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_stream_read = 1'b1;
    end else begin
        right_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op48_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((left_empty_1_reg_99_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op46_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op45_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        temp_stream_blk_n = temp_stream_full_n;
    end else begin
        temp_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op48_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_predicate_op46_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001)))) begin
        temp_stream_din = right_val_2_reg_226;
    end else if ((((left_empty_1_reg_99_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_predicate_op45_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001)))) begin
        temp_stream_din = left_val_2_reg_221;
    end else begin
        temp_stream_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op48_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((left_empty_1_reg_99_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op46_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op45_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        temp_stream_write = 1'b1;
    end else begin
        temp_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op26_read_state1 == 1'b1) & (right_stream_empty_n == 1'b0)) | ((ap_predicate_op19_read_state1 == 1'b1) & (left_stream_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op48_write_state3 == 1'b1) & (temp_stream_full_n == 1'b0)) | ((left_empty_1_reg_99_pp0_iter1_reg == 1'd0) & (temp_stream_full_n == 1'b0)) | ((ap_predicate_op46_write_state3 == 1'b1) & (temp_stream_full_n == 1'b0)) | ((ap_predicate_op45_write_state3 == 1'b1) & (temp_stream_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_192 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_300 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((or_ln19_reg_217 == 1'd0) | ((right_empty_1_reg_114 == 1'd0) | (left_empty_1_reg_99 == 1'd0))));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_left_empty_1_reg_99 = 'bx;

assign ap_phi_reg_pp0_iter0_left_empty_2_reg_129 = 'bx;

assign ap_phi_reg_pp0_iter0_right_empty_1_reg_114 = 'bx;

assign ap_phi_reg_pp0_iter0_right_empty_2_reg_149 = 'bx;

always @ (*) begin
    ap_predicate_op19_read_state1 = ((tmp_9_nbreadreq_fu_42_p3 == 1'd1) & (ap_phi_mux_left_empty_phi_fu_80_p4 == 1'd1));
end

always @ (*) begin
    ap_predicate_op26_read_state1 = ((tmp_s_nbreadreq_fu_56_p3 == 1'd1) & (ap_phi_mux_right_empty_phi_fu_91_p4 == 1'd1));
end

always @ (*) begin
    ap_predicate_op45_write_state3 = ((icmp_ln20_reg_231 == 1'd0) & (or_ln19_reg_217_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op46_write_state3 = ((icmp_ln20_reg_231 == 1'd1) & (or_ln19_reg_217_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op48_write_state3 = ((right_empty_1_reg_114_pp0_iter1_reg == 1'd0) & (left_empty_1_reg_99_pp0_iter1_reg == 1'd1));
end

assign icmp_ln20_fu_191_p2 = ((left_val_fu_34 > right_val_fu_38) ? 1'b1 : 1'b0);

assign or_ln19_fu_179_p2 = (ap_phi_mux_right_empty_1_phi_fu_117_p6 | ap_phi_mux_left_empty_1_phi_fu_102_p6);

assign tmp_9_nbreadreq_fu_42_p3 = left_stream_empty_n;

assign tmp_s_nbreadreq_fu_56_p3 = right_stream_empty_n;

endmodule //merge_sort_merge_sort_iterative_Pipeline_merge
